; this example uses a global state variable (*queue*) to store a
; list of values. every frame a new value is inserted at the end,
; while the first value is zapped.

(define list-size 60)
(define (zeros n)
    (if (> n 0)
        (append '(0) (zeros (- n 1)))
        '(0)))
(define *queue* (zeros list-size))

(define (box lst)
    (push)
        (color (hsv (* 360 (car lst))))
        (translate (vector 0 0 (* 20.0 (car lst))))
        (scale 1 1 5)
        (draw-cube)
    (pop)
    (rotate (/ 360.0 list-size) (vector 0 1 0))
    (translate (vector 2.0 0.838 0))
    (if (null? (cdr lst)) '() (box (cdr lst))))

(define (init)
    (scale 0.5)
    (rotate -45 x-axis)
    (rotate (/ (msecs) 100) z-axis)
    (draw-grid)
    (color (vmul 0.3 white))
    (push)
        (translate (vector 0 0.5 0.5))
        (scale 0.01 0.01 0.5)
        (draw-cube)
    (pop)
    (push)
        (translate (vector 0 -0.5 0.5))
        (scale 0.01 0.01 0.5)
        (draw-cube)
    (pop)
    (translate (vmul 0.5 up))
    (translate (vmul -0.5 y-axis))
    (scale 0.02))

(every-frame
    (init)
    (set! *queue* (append (cdr *queue*)
                          (list (* (rndf) (sin (secs))))))
    (box *queue*))
